import { useState, useEffect } from "react";
import queryString from "query-string";
import { Router, useRouter } from "next/router";
import Title from "@/components/Title";
// import { QrReader } from "react-qr-reader";
// import QrReader from "react-qr-scanner";
// import QrReader from "modern-react-qr-reader";
import Head from "next/head";
import styles from '@/styles/Receiver.module.css';


import dynamic from "next/dynamic";

const NoSSRQrScanner = dynamic(() => import("../components/QrScanner"), {
  ssr: false,
});




export default function Receiver({}){
    // const [type, setType] = useState(CameraType.back);
    // const [permission, requestPermission] = Camera.useCameraPermissions();

    // const [hasScanned, setHasScanned] = useState(false);
    // const [scanningResults, setScanningResults] = useState(null);
    // const isFocused = useIsFocused();
    // // console.log(permission);
    const [loaded, setLoaded]=useState(false);

    useEffect(()=> {
      setLoaded(true);
    },[])

    const router = useRouter();
    // // const [params, setParams] = useState({});

    // useEffect(() => {
    //   if (router.isReady) {
    //     console.log("ready", router.query);
    //     // setParams(router.query);
    //     if(router.query.image && router.query.message) {
    //       console.log(router.query, 'I move to the next page');
    //       router.push({pathname:'/ARSystem',query: {...router.query}});
    //     }
    //   }
    // }, [router.isReady]);

    const [scanResult, setScanResult] = useState(null);

    const handleError = (err) =>{
    console.error(err)
  }
  const handleScan=(data)=>{
    setScanResult(data);
    console.log(data);
    if (data){
      const parsed = queryString.parseUrl(data);
      console.log(parsed.query);
      if (parsed.query?.image&&parsed.query?.message) {
        router.push({pathname:'ARSystem', query: {...parsed.query}});
      }
    }
  }

    // const scannedCode = (result) => {
    //   if (!hasScanned){
    //     console.log(result);
    //     console.log(result.data);
    //   }
    //   setHasScanned(true);
    //   handleScannedCode(result.data)
    // };

    // const handleScannedCode = (data) => {
    //     // const url = new URL(data);
    //     // console.log(url);
    //     // const params = url.searchParams;
    //     // console.log(params.get('image'));
    //     const parsed = queryString.parseUrl(
    //       data
    //     );
    //     console.log(parsed);
    //     if (parsed.query.image && parsed.query.message){
    //         setScanningResults(parsed.query);
    //         navigation.navigate("ARSystem", parsed.query);
    //     }
    // }

    return (
      <>
        <Head>
          <title>Mystery Mail</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Title></Title>
        <div>
          {/* {isFocused && (
          <Camera
            style={{ width: 300, height: 300 }}
            type={type}
            onBarCodeScanned={scannedCode}
            autoFocus={true}
          ></Camera>
        )}  */}
          {/* <p>Receive your card</p> */}
          {/* {scanningResults?.image && <Image source={scanningResults.image}></Image>}
        {} */}
          {/* <QrReader
            onResult={(result, error) => {
              if (!!result) {
                setScanResult(result?.text);
              }

              if (!!error) {
                console.info(error);
              }
            }}
            style={{ width: "100%" }}
          />
          <p>{scanResult}</p> */}
          {/* <Camera /> */}
          {/* {loaded && (
            <QrReader
              facingMode={"environment"}
              className={styles.camera}
              onError={handleError}
              onScan={handleScan}
            />
          )} */}
          <NoSSRQrScanner
            handleError={handleError}
            handleScan={handleScan}
          ></NoSSRQrScanner>
          {/* <p>{scanResult?.text}</p> */}
          <p className={styles.text}>
            Scan the QR code on the back of your card.
          </p>
        </div>
      </>
    );
}
